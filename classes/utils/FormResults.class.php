<?phpclass FormResults{	private $errors, $messages, $values;	public function __construct(){		$this->errors = array();		$this->messages = array();		$this->values = array();	}		public function hasErrors(){		return count($this->errors) > 0;	}	public function hasMessages(){		return count($this->messages) > 0;	}	public function hasValues(){		return count($this->values) > 0;	}	public function sizeErrors(){		return count($this->errors);	}	public function sizeMessages(){		return count($this->messages);	}	public function sizeValues(){		return count($this->values);	}	public function getErrors(){		return $this->errors;	}	public function getMessages(){		return $this->messages;	}	public function getValues(){		return $this->values;	}	public function getErr($key){		if(!isset($this->errors[$key]))return NULL;		return $this->errors[$key];	}	public function getMsg($key){		if(!isset($this->messages[$key]))return NULL;		return $this->messages[$key];	}	public function getValue($key){		if(!isset($this->values[$key]))return NULL;		return $this->values[$key];	}    public function hasError($key){		return (isset($this->errors[$key]));	}	public function hasValueFor($key){		return (isset($this->values[$key]));	}	public function addErr($key, $err){		$this->errors[$key] = $err;	}    public function errorsToString(){        $string = "";        foreach($errors as $key=>$err){            $string .= $err."<br/>";        }        return $string;    }	public function addMsg($key, $msg){		$this->messages[$key] = $msg;	}	public function addValue($key, $val){		$this->values[$key] = $val;	}		public function clear(){		$this->errors = array();		$this->messages = array();		$this->values = array();	}	public function __destruct(){		$this->errors = NULL;		$this->messages = NULL;		$this->values = NULL;	}    public function fillPostValues(){        if(count($_POST)<1) return;        foreach($_POST as $key=>$val){            $this->addValue($key, $val);        }    }	public function register(){		session_register('FORM_RESULTS');		$_SESSION['FORM_RESULTS'] = serialize($this);	}		public static function setGlobalFromSession(){		if(isset($_SESSION['FORM_RESULTS']) && $_SESSION['FORM_RESULTS'] != NULL && $_SESSION['FORM_RESULTS']!= ""){			$GLOBALS['FORM_RESULTS'] = unserialize($_SESSION['FORM_RESULTS']);			unset($_SESSION['FORM_RESULTS']);			//session_unregister('FORM_RESULTS');		}	}	public static function isFormFieldEmpty($field){        return(!isset($_POST[$field])||$_POST[$field]==null||$_POST[$field]=="");    }	}?>